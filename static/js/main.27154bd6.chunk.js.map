{"version":3,"sources":["components/DataFlow/renderGraph.js","components/DataFlow/index.jsx","components/DataTable/renderGraph.js","components/DataTable/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["renderGraph","fetch","then","res","json","data","Column","xField","yField","label","position","style","fill","opacity","layout","type","maxColumnWidth","columnStyle","xAxis","autoHide","autoRotate","title","text","yAxis","meta","time","alias","value","render","ratio","Sider","Layout","Content","DataFlow","useEffect","theme","width","id","marginLeft","marginTop","isGroup","seriesField","minColumnWidth","legend","slider","start","end","formatter","DataTable","padding","Header","App","useState","current","setCurrent","className","backgroundColor","onClick","e","key","mode","selectedKeys","Item","to","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27154bd6.chunk.js","sourcesContent":["import { Column } from '@antv/g2plot'\n\nconst renderHourGraph = function () {\n  fetch('https://dsqiao.github.io/data-integration/data/brower_time.json')\n    .then(res => res.json())\n    .then(data => {\n      const bar = new Column('browser-time-container', {\n        data,\n        xField: 'time',\n        yField: 'value',\n        label: {\n          position: 'top',\n          style: {\n            fill: '#000',\n            opacity: 0.6,\n          },\n          layout: [\n            { type: 'interval-adjust-position' },\n            { type: 'interval-hide-overlap' },\n          ],\n        },\n        maxColumnWidth: 8,\n        columnStyle: {\n          fill: '#722ED1',\n        },\n        xAxis: {\n          label: {\n            autoHide: true,\n            autoRotate: false,\n          },\n          title: {\n            text: '时间'\n          }\n        },\n        yAxis: {\n          title: {\n            text: '浏览量'\n          }\n        },\n        meta: {\n          time: {\n            alias: '时间',\n          },\n          value: {\n            alias: '浏览量',\n          },\n        },\n      })\n      bar.render()\n    })\n}\n\nconst renderBuyHourGraph = function () {\n  fetch('https://dsqiao.github.io/data-integration/data/buy_time_stream.json')\n    .then(res => res.json())\n    .then(data => {\n      const bar = new Column('buy-time-container', {\n        data,\n        xField: 'time',\n        yField: 'value',\n        label: {\n          position: 'top',\n          style: {\n            fill: '#000',\n            opacity: 0.6,\n          },\n          layout: [\n            { type: 'interval-adjust-position' },\n            { type: 'interval-hide-overlap' },\n          ],\n        },\n        maxColumnWidth: 8,\n        columnStyle: {\n          fill: '#722ED1',\n        },\n        xAxis: {\n          label: {\n            autoHide: true,\n            autoRotate: false,\n          },\n          title: {\n            text: '时间'\n          }\n        },\n        yAxis: {\n          title: {\n            text: '购买量'\n          }\n        },\n        meta: {\n          time: {\n            alias: '时间',\n          },\n          value: {\n            alias: '购买量',\n          },\n        },\n      })\n      bar.render()\n    })\n}\n\nconst renderPremiseGraph = function () {\n  fetch('https://dsqiao.github.io/data-integration/data/premise.json')\n    .then(res => res.json())\n    .then(data => {\n      const bar = new Column('premise-container', {\n        data,\n        xField: 'time',\n        yField: 'ratio',\n        maxColumnWidth: 8,\n        columnStyle: {\n          fill: '#722ED1',\n        },\n        xAxis: {\n          label: {\n            autoHide: true,\n            autoRotate: false,\n          },\n          title: {\n            text: '时间'\n          }\n        },\n        yAxis: {\n          title: {\n            text: '购买欲望'\n          }\n        },\n        meta: {\n          time: {\n            alias: '时间',\n          },\n          ratio: {\n            alias: '购买欲望',\n          },\n        },\n      })\n      bar.render()\n    })\n}\n\nexport default function renderGraph () {\n  renderHourGraph()\n  renderBuyHourGraph()\n  renderPremiseGraph()\n}","import { useEffect } from 'react'\nimport { Layout } from \"antd\"\nimport renderGraph from './renderGraph'\nconst { Sider, Content } = Layout\n\n\nfunction DataFlow () {\n  useEffect(() => {\n    renderGraph()\n  }, [])\n  return (\n    <Layout>\n      <Sider theme=\"light\" width=\"250px\"></Sider>\n      <Content>\n        <div id=\"browser-time-container\" style={{ width: '80%', marginLeft: '10%', marginTop: '160px' }} />\n        <div>我们分析了流数据表中所有 getDetail 请求的时间，做出每小时 getDetail 请求的数量如上图</div>\n        <div id=\"buy-time-container\" style={{ width: '80%', marginLeft: '10%', marginTop: '160px' }} />\n        <div>然后，我们分析了流数据表中所有 buy 请求的时间</div>\n        <div id=\"premise-container\" style={{ width: '80%', marginLeft: '10%', marginTop: '160px' }} />\n        <div>随后，我们根据购买量与浏览量，计算出各个时间段用户的购买欲望如图</div>\n      </Content>\n    </Layout>\n  )\n}\n\nexport default DataFlow","import { Column } from '@antv/g2plot'\n\nconst renderHourGraph = function () {\n  fetch('https://dsqiao.github.io/data-integration/data/buy_time.json')\n    .then(res => res.json())\n    .then(data => {\n      const bar = new Column('buy-time-container', {\n        data,\n        xField: 'time',\n        yField: 'value',\n        label: {\n          position: 'top',\n          style: {\n            fill: '#000',\n            opacity: 0.6,\n          },\n          layout: [\n            // 柱形图数据标签位置自动调整\n            { type: 'interval-adjust-position' },\n            // 数据标签防遮挡\n            { type: 'interval-hide-overlap' },\n          ],\n        },\n        maxColumnWidth: 8,\n        columnStyle: {\n          fill: '#722ED1',\n        },\n        xAxis: {\n          label: {\n            autoHide: true,\n            autoRotate: false,\n          },\n          title: {\n            text: '时间'\n          }\n        },\n        yAxis: {\n          title: {\n            text: '订单量'\n          }\n        },\n        meta: {\n          time: {\n            alias: '时间',\n          },\n          value: {\n            alias: '订单量',\n          },\n        },\n      })\n      bar.render()\n    })\n}\n\nconst renderSalesGraoh = function () {\n  fetch('https://dsqiao.github.io/data-integration/data/sales.json')\n    .then(res => res.json())\n    .then(data => {\n      const bar = new Column('container', {\n        data,\n        isGroup: true,\n        xField: 'category_id',\n        yField: 'value',\n        seriesField: 'item_id',\n        minColumnWidth: 1,\n        columnStyle: {\n          fill: '#722ED1'\n        },\n        legend: false,\n        label: {\n          position: 'top', // label 数据标签位置 top', 'middle', 'bottom'\n          layout: [\n            // 柱形图数据标签位置自动调整\n            { type: 'interval-adjust-position' },\n            // 数据标签防遮挡\n            { type: 'interval-hide-overlap' },\n            // 数据标签文颜色自动调整\n            { type: 'adjust-color' },\n          ],\n        },\n        xAxis: {\n          label: {\n            autoRotate: false,\n          },\n          title: {\n            text: 'category_id',\n          },\n        },\n        yAxis: {\n          title: {\n            text: '销量'\n          },\n        },\n        slider: {\n          start: 0,\n          end: 0.04,\n          formatter: () => '',\n        },\n      })\n      bar.render()\n    })\n}\n\nexport default function renderGraph () {\n  renderHourGraph()\n  renderSalesGraoh()\n}","import { useEffect } from 'react'\nimport { Layout } from \"antd\"\nimport renderGraph from './renderGraph'\nconst { Sider, Content } = Layout\n\nfunction DataTable () {\n  useEffect(() => {\n    renderGraph()\n  }, [])\n  return (\n    <Layout>\n      <Sider theme=\"light\" width=\"250px\"></Sider>\n      <Content style={{ padding: '100px 0px',}}>\n        <div id=\"container\" style={{ width: '70%', marginLeft: '15%', marginTop: '160px' }}></div>\n        <div id=\"buy-amount-container\"></div>\n        <div id=\"buy-time-container\" style={{ width: '70%', marginLeft: '16%', marginTop: '160px' }} />\n        <div>我们分析了数据库表中所有购买记录的时间，做出各个小时的购买量如图</div>\n      </Content>\n    </Layout>\n  )\n}\n\nexport default DataTable","import { Menu, Layout } from 'antd'\nimport { useState } from 'react'\nimport { Route, Link, Switch } from 'react-router-dom'\nimport './App.less'\nimport DataFlow from './components/DataFlow'\nimport DataTable from './components/DataTable'\n\nconst { Header } = Layout\n\nfunction App () {\n  const [current, setCurrent] = useState('1')\n  const hanldeMenuClick = e => {\n    setCurrent(e.key)\n  }\n  return (\n    <div className=\"App\">\n      <Layout style={{ backgroundColor: '#000' }}>\n        <Header>\n          <div className=\"title\">第20组成果展示</div>\n          <Menu className=\"menu\" onClick={hanldeMenuClick} mode=\"horizontal\" selectedKeys={[current]}>\n            <Menu.Item key=\"1\"><Link to=\"/table\">数据表部分</Link></Menu.Item>\n            <Menu.Item key=\"2\"><Link to=\"/flow\">流数据部分</Link></Menu.Item>\n          </Menu>\n        </Header>\n        <Switch>\n          <Route path=\"/table\" component={DataTable}></Route>\n          <Route path=\"/flow\" component={DataFlow}></Route>\n          <Route path=\"/\" component={DataTable}></Route>\n        </Switch>\n      </Layout>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}