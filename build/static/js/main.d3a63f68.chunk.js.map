{"version":3,"sources":["components/DataFlow/index.jsx","components/DataTable/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Sider","Layout","Content","data","type","value","DataFlow","useEffect","Pie","appendPadding","angleField","colorField","radius","innerRadius","meta","formatter","v","label","offset","autoRotate","style","textAlign","percent","toFixed","statistic","title","offsetY","content","interactions","cfg","start","trigger","action","end","render","theme","width","id","marginLeft","marginTop","DataTable","fetch","then","res","json","Column","isGroup","xField","yField","seriesField","minColumnWidth","columnStyle","fill","legend","position","layout","xAxis","text","yAxis","slider","opacity","maxColumnWidth","autoHide","time","alias","padding","Header","App","useState","current","setCurrent","className","backgroundColor","onClick","e","key","mode","selectedKeys","Item","to","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"yRAIQA,EAAmBC,IAAnBD,MAAOE,EAAYD,IAAZC,QAETC,EAAO,CACX,CAAEC,KAAM,qBAAOC,MAAO,IACtB,CAAED,KAAM,qBAAOC,MAAO,IACtB,CAAED,KAAM,qBAAOC,MAAO,IACtB,CAAED,KAAM,qBAAOC,MAAO,IACtB,CAAED,KAAM,qBAAOC,MAAO,IACtB,CAAED,KAAM,eAAMC,MAAO,IAgERC,MA5Df,WAkDE,OAjDAC,qBAAU,WACQ,IAAIC,MAAI,YAAa,CACnCC,cAAe,GACfN,OACAO,WAAY,QACZC,WAAY,OACZC,OAAQ,EACRC,YAAa,IACbC,KAAM,CACJT,MAAO,CACLU,UAAW,SAACC,GAAD,qBAAYA,MAG3BC,MAAO,CACLb,KAAM,QACNc,OAAQ,OACRC,YAAY,EACZC,MAAO,CAAEC,UAAW,UACpBN,UAAW,gBAAGO,EAAH,EAAGA,QAAH,iBAA+B,IAAVA,GAAeC,QAAQ,GAA5C,OAEbC,UAAW,CACTC,MAAO,CACLC,SAAU,GAEZC,QAAS,CACPD,SAAU,IAIdE,aAAc,CACZ,CAAExB,KAAM,oBACR,CAAEA,KAAM,kBACR,CACEA,KAAM,uBACNyB,IAAK,CACHC,MAAO,CACL,CAAEC,QAAS,qBAAsBC,OAAQ,wBACzC,CAAED,QAAS,yBAA0BC,OAAQ,yBAE/CC,IAAK,CACH,CAAEF,QAAS,qBAAsBC,OAAQ,uBACzC,CAAED,QAAS,yBAA0BC,OAAQ,6BAM/CE,WACP,IAED,eAAC,IAAD,WACE,cAAClC,EAAD,CAAOmC,MAAM,QAAQC,MAAM,UAC3B,cAAClC,EAAD,UACE,qBAAKmC,GAAG,YAAYjB,MAAO,CAAEgB,MAAO,MAAOE,WAAY,MAAOC,UAAW,iBCnEzEvC,EAAmBC,IAAnBD,MAAOE,EAAYD,IAAZC,QAkHAsC,MA/Gf,WAoGE,OAnGAjC,qBAAU,WACRkC,MAAM,6DACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAvC,GACQ,IAAI0C,SAAO,YAAa,CAClC1C,OACA2C,SAAS,EACTC,OAAQ,cACRC,OAAQ,QACRC,YAAa,UACbC,eAAgB,EAChBC,YAAa,CACXC,KAAM,WAERC,QAAQ,EACRpC,MAAO,CACLqC,SAAU,MACVC,OAAQ,CAEN,CAAEnD,KAAM,4BAER,CAAEA,KAAM,yBAER,CAAEA,KAAM,kBAGZoD,MAAO,CACLvC,MAAO,CACLE,YAAY,GAEdM,MAAO,CACLgC,KAAM,gBAGVC,MAAO,CACLjC,MAAO,CACLgC,KAAM,iBAGVE,OAAQ,CACN7B,MAAO,EACPG,IAAK,IACLlB,UAAW,iBAAM,OAGjBmB,cAEP,IACH3B,qBAAU,WACRkC,MAAM,gEACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAvC,GACQ,IAAI0C,SAAO,qBAAsB,CAC3C1C,OACA4C,OAAQ,OACRC,OAAQ,QACR/B,MAAO,CACLqC,SAAU,MACVlC,MAAO,CACLgC,KAAM,OACNQ,QAAS,IAEXL,OAAQ,CAEN,CAAEnD,KAAM,4BAER,CAAEA,KAAM,2BAGZyD,eAAgB,EAChBV,YAAa,CACXC,KAAM,WAERI,MAAO,CACLvC,MAAO,CACL6C,UAAU,EACV3C,YAAY,GAEdM,MAAO,CACLgC,KAAM,iBAGVC,MAAO,CACLjC,MAAO,CACLgC,KAAM,uBAGV3C,KAAM,CACJiD,KAAM,CACJC,MAAO,gBAET3D,MAAO,CACL2D,MAAO,yBAIT9B,cAEP,IAED,eAAC,IAAD,WACE,cAAC,EAAD,CAAOC,MAAM,QAAQC,MAAM,UAC3B,eAAC,EAAD,CAAShB,MAAO,CAAE6C,QAAS,aAA3B,UACE,qBAAK5B,GAAG,YAAYjB,MAAO,CAAEgB,MAAO,MAAOE,WAAY,MAAOC,UAAW,WACzE,qBAAKF,GAAG,qBAAqBjB,MAAO,CAAEgB,MAAO,MAAOE,WAAY,MAAOC,UAAW,kBCxGlF2B,EAAWjE,IAAXiE,OA2BOC,MAzBf,WAAiB,IAAD,EACgBC,mBAAS,KADzB,mBACPC,EADO,KACEC,EADF,KAKd,OACE,qBAAKC,UAAU,MAAf,SACE,eAAC,IAAD,CAAQnD,MAAO,CAAEoD,gBAAiB,QAAlC,UACE,eAACN,EAAD,WACE,qBAAKK,UAAU,QAAf,oDACA,eAAC,IAAD,CAAMA,UAAU,OAAOE,QARP,SAAAC,GACtBJ,EAAWI,EAAEC,MAO0CC,KAAK,aAAaC,aAAc,CAACR,GAAlF,UACE,cAAC,IAAKS,KAAN,UAAmB,cAAC,IAAD,CAAMC,GAAG,SAAT,6CAAJ,KACf,cAAC,IAAKD,KAAN,UAAmB,cAAC,IAAD,CAAMC,GAAG,QAAT,6CAAJ,WAGnB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,SAASC,UAAWzC,IAChC,cAAC,IAAD,CAAOwC,KAAK,QAAQC,UAAW3E,IAC/B,cAAC,IAAD,CAAO0E,KAAK,IAAIC,UAAWzC,aCftB0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1C,MAAK,YAAkD,IAA/C2C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASxD,OACP,cAAC,IAAMyD,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.d3a63f68.chunk.js","sourcesContent":["import { useEffect } from 'react'\nimport { Layout } from \"antd\"\nimport { Pie } from '@antv/g2plot'\n\nconst { Sider, Content } = Layout\n\nconst data = [\n  { type: '分类一', value: 27 },\n  { type: '分类二', value: 25 },\n  { type: '分类三', value: 18 },\n  { type: '分类四', value: 15 },\n  { type: '分类五', value: 10 },\n  { type: '其他', value: 5 },\n]\n\n\nfunction DataFlow () {\n  useEffect(() => {\n    const piePlot = new Pie('container', {\n      appendPadding: 10,\n      data,\n      angleField: 'value',\n      colorField: 'type',\n      radius: 1,\n      innerRadius: 0.64,\n      meta: {\n        value: {\n          formatter: (v) => `¥ ${v}`,\n        },\n      },\n      label: {\n        type: 'inner',\n        offset: '-50%',\n        autoRotate: false,\n        style: { textAlign: 'center' },\n        formatter: ({ percent }) => `${(percent * 100).toFixed(0)}%`,\n      },\n      statistic: {\n        title: {\n          offsetY: -8,\n        },\n        content: {\n          offsetY: -4,\n        },\n      },\n      // 添加 中心统计文本 交互\n      interactions: [\n        { type: 'element-selected' },\n        { type: 'element-active' },\n        {\n          type: 'pie-statistic-active',\n          cfg: {\n            start: [\n              { trigger: 'element:mouseenter', action: 'pie-statistic:change' },\n              { trigger: 'legend-item:mouseenter', action: 'pie-statistic:change' },\n            ],\n            end: [\n              { trigger: 'element:mouseleave', action: 'pie-statistic:reset' },\n              { trigger: 'legend-item:mouseleave', action: 'pie-statistic:reset' },\n            ],\n          },\n        },\n      ],\n    })\n    piePlot.render()\n  }, [])\n  return (\n    <Layout>\n      <Sider theme=\"light\" width=\"250px\"></Sider>\n      <Content>\n        <div id=\"container\" style={{ width: '80%', marginLeft: '10%', marginTop: '160px' }}></div>\n      </Content>\n    </Layout>\n  )\n}\n\nexport default DataFlow","import { useEffect } from 'react'\nimport { Layout } from \"antd\"\nimport { Column } from '@antv/g2plot'\nconst { Sider, Content } = Layout\n\n\nfunction DataTable () {\n  useEffect(() => {\n    fetch('https://dsqiao.github.io/data-integration/data/sales.json')\n      .then(res => res.json())\n      .then(data => {\n        const bar = new Column('container', {\n          data,\n          isGroup: true,\n          xField: 'category_id',\n          yField: 'value',\n          seriesField: 'item_id',\n          minColumnWidth: 1,\n          columnStyle: {\n            fill: '#722ED1'\n          },\n          legend: false,\n          label: {\n            position: 'top', // label 数据标签位置 top', 'middle', 'bottom'\n            layout: [\n              // 柱形图数据标签位置自动调整\n              { type: 'interval-adjust-position' },\n              // 数据标签防遮挡\n              { type: 'interval-hide-overlap' },\n              // 数据标签文颜色自动调整\n              { type: 'adjust-color' },\n            ],\n          },\n          xAxis: {\n            label: {\n              autoRotate: false,\n            },\n            title: {\n              text: 'category_id',\n            },\n          },\n          yAxis: {\n            title: {\n              text: '销量'\n            },\n          },\n          slider: {\n            start: 0,\n            end: 0.04,\n            formatter: () => '',\n          },\n        })\n        bar.render()\n      })\n  }, [])\n  useEffect(() => {\n    fetch('https://dsqiao.github.io/data-integration/data/buy_time.json')\n      .then(res => res.json())\n      .then(data => {\n        const bar = new Column('buy-time-container', {\n          data,\n          xField: 'time',\n          yField: 'value',\n          label: {\n            position: 'top',\n            style: {\n              fill: '#000',\n              opacity: 0.6,\n            },\n            layout: [\n              // 柱形图数据标签位置自动调整\n              { type: 'interval-adjust-position' },\n              // 数据标签防遮挡\n              { type: 'interval-hide-overlap' },\n            ],\n          },\n          maxColumnWidth: 8,\n          columnStyle: {\n            fill: '#722ED1',\n          },\n          xAxis: {\n            label: {\n              autoHide: true,\n              autoRotate: false,\n            },\n            title: {\n              text: '时间'\n            }\n          },\n          yAxis: {\n            title: {\n              text: '订单量'\n            }\n          },\n          meta: {\n            time: {\n              alias: '时间',\n            },\n            value: {\n              alias: '订单量',\n            },\n          },\n        })\n        bar.render()\n      })\n  }, [])\n  return (\n    <Layout>\n      <Sider theme=\"light\" width=\"250px\"></Sider>\n      <Content style={{ padding: '100px 0px',}}>\n        <div id=\"container\" style={{ width: '70%', marginLeft: '15%', marginTop: '160px' }}></div>\n        <div id=\"buy-time-container\" style={{ width: '70%', marginLeft: '16%', marginTop: '160px' }}></div>\n      </Content>\n    </Layout>\n  )\n}\n\nexport default DataTable","import { Menu, Layout } from 'antd'\nimport { useState } from 'react'\nimport { Route, Link, Switch } from 'react-router-dom'\nimport './App.less'\nimport DataFlow from './components/DataFlow'\nimport DataTable from './components/DataTable'\n\nconst { Header } = Layout\n\nfunction App () {\n  const [current, setCurrent] = useState('1')\n  const hanldeMenuClick = e => {\n    setCurrent(e.key)\n  }\n  return (\n    <div className=\"App\">\n      <Layout style={{ backgroundColor: '#000' }}>\n        <Header>\n          <div className=\"title\">第20组成果展示</div>\n          <Menu className=\"menu\" onClick={hanldeMenuClick} mode=\"horizontal\" selectedKeys={[current]}>\n            <Menu.Item key=\"1\"><Link to=\"/table\">数据表部分</Link></Menu.Item>\n            <Menu.Item key=\"2\"><Link to=\"/flow\">流数据部分</Link></Menu.Item>\n          </Menu>\n        </Header>\n        <Switch>\n          <Route path=\"/table\" component={DataTable}></Route>\n          <Route path=\"/flow\" component={DataFlow}></Route>\n          <Route path=\"/\" component={DataTable}></Route>\n        </Switch>\n      </Layout>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}