{"version":3,"sources":["components/DataFlow/renderGraph.js","components/goAnchor.js","components/DataFlow/index.jsx","components/DataTable/renderGraph.js","components/DataTable/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["THEME_COLOR","renderGraph","fetch","then","res","json","data","Column","xField","yField","xAxis","label","autoRotate","columnStyle","fill","slider","start","end","render","position","style","opacity","layout","type","maxColumnWidth","autoHide","title","text","yAxis","meta","time","alias","value","ratio","goAnchor","selector","top","scrollTop","document","documentElement","window","pageYOffset","body","querySelector","offsetTop","scrollBy","behavior","Sider","Layout","Content","DataFlow","useEffect","liquidPlot","Liquid","percent","outline","border","distance","wave","length","color","setInterval","console","log","changeData","theme","width","mode","defaultOpenKeys","Item","onClick","id","className","isGroup","seriesField","minColumnWidth","legend","formatter","DataTable","Header","App","useState","current","setCurrent","backgroundColor","display","alignItems","t","class","viewBox","version","xmlns","p-id","height","marginRight","d","e","key","selectedKeys","to","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c2d1d6dd.chunk.js","sourcesContent":["import { Column } from '@antv/g2plot'\n\nconst THEME_COLOR = '#61DDAA'\n\nconst renderRecallRateGraph = function () {\n  fetch('http://119.3.153.72/recall_rate.json')\n    .then(res => res.json())\n    .then(data => {\n      const bar = new Column('recall-rate-container', {\n        data,\n        xField: 'item_id',\n        yField: 'recall_rate',\n        xAxis: {\n          label: {\n            autoRotate: false,\n          },\n        },\n        columnStyle: {\n          fill: THEME_COLOR,\n        },\n        slider: {\n          start: 0.0,\n          end: 0.15,\n        },\n      })\n      bar.render()\n    })\n}\n\nconst renderHourGraph = function () {\n  fetch('http://119.3.153.72//brower_time.json')\n    .then(res => res.json())\n    .then(data => {\n      const bar = new Column('browser-time-container', {\n        data,\n        xField: 'time',\n        yField: 'value',\n        label: {\n          position: 'top',\n          style: {\n            fill: '#000',\n            opacity: 0.6,\n          },\n          layout: [\n            { type: 'interval-adjust-position' },\n            { type: 'interval-hide-overlap' },\n          ],\n        },\n        maxColumnWidth: 8,\n        columnStyle: {\n          fill: THEME_COLOR,\n        },\n        xAxis: {\n          label: {\n            autoHide: true,\n            autoRotate: false,\n          },\n          title: {\n            text: '时间'\n          }\n        },\n        yAxis: {\n          title: {\n            text: '浏览量'\n          }\n        },\n        meta: {\n          time: {\n            alias: '时间',\n          },\n          value: {\n            alias: '浏览量',\n          },\n        },\n      })\n      bar.render()\n    })\n}\n\nconst renderBuyHourGraph = function () {\n  fetch('http://119.3.153.72/buy_time_stream.json')\n    .then(res => res.json())\n    .then(data => {\n      const bar = new Column('buy-time-container', {\n        data,\n        xField: 'time',\n        yField: 'value',\n        label: {\n          position: 'top',\n          style: {\n            fill: '#000',\n            opacity: 0.6,\n          },\n          layout: [\n            { type: 'interval-adjust-position' },\n            { type: 'interval-hide-overlap' },\n          ],\n        },\n        maxColumnWidth: 8,\n        columnStyle: {\n          fill: THEME_COLOR,\n        },\n        xAxis: {\n          label: {\n            autoHide: true,\n            autoRotate: false,\n          },\n          title: {\n            text: '时间'\n          }\n        },\n        yAxis: {\n          title: {\n            text: '购买量'\n          }\n        },\n        meta: {\n          time: {\n            alias: '时间',\n          },\n          value: {\n            alias: '购买量',\n          },\n        },\n      })\n      bar.render()\n    })\n}\n\nconst renderPremiseGraph = function () {\n  fetch('http://119.3.153.72/premise.json')\n    .then(res => res.json())\n    .then(data => {\n      const bar = new Column('premise-container', {\n        data,\n        xField: 'time',\n        yField: 'ratio',\n        maxColumnWidth: 8,\n        columnStyle: {\n          fill: THEME_COLOR,\n        },\n        xAxis: {\n          label: {\n            autoHide: true,\n            autoRotate: false,\n          },\n          title: {\n            text: '时间'\n          }\n        },\n        yAxis: {\n          title: {\n            text: '购买欲望'\n          }\n        },\n        meta: {\n          time: {\n            alias: '时间',\n          },\n          ratio: {\n            alias: '购买欲望',\n          },\n        },\n      })\n      bar.render()\n    })\n}\n\nexport default function renderGraph () {\n  renderRecallRateGraph()\n  renderHourGraph()\n  renderBuyHourGraph()\n  renderPremiseGraph()\n}","function goAnchor (selector) {\n  // 移动距离\n  let top = 0\n  // 当前滚动条位置\n  const scrollTop = document.documentElement.scrollTop || window.pageYOffset || document.body.scrollTop\n  // 若为指定距离\n  if (typeof selector === 'number') {\n    top = selector - scrollTop\n  } else {\n    const anchor = document.querySelector(selector) || { offsetTop: 0 }\n    top = anchor.offsetTop - scrollTop - 94\n  }\n  window.scrollBy({ top, behavior: 'smooth' })\n}\n\nexport default goAnchor\n","import { useEffect } from 'react'\nimport { Layout, Menu } from \"antd\"\nimport renderGraph from './renderGraph'\nimport { Liquid } from '@antv/g2plot'\nimport '../layout.css'\nimport SubMenu from 'antd/lib/menu/SubMenu'\nimport goAnchor from '../goAnchor'\nconst { Sider, Content } = Layout\nconst THEME_COLOR = '#61DDAA'\n\n\nfunction DataFlow () {\n  useEffect(() => {\n    renderGraph()\n  }, [])\n\n  useEffect(() => {\n    const liquidPlot = new Liquid('precision-container', {\n      percent: 0.0,\n      outline: {\n        border: 4,\n        distance: 8,\n      },\n      wave: {\n        length: 128,\n      },\n      color: THEME_COLOR,\n    })\n    liquidPlot.render()\n    setInterval(() => {\n      fetch('http://119.3.153.72/output.txt')\n        .then(res => res.json())\n        .then(data => {\n          console.log(data)\n          liquidPlot.changeData(data)\n        })\n    }, 1000)\n  }, [])\n  \n  return (\n    <Layout>\n      <Sider theme=\"light\" width=\"250px\">\n        <Menu\n          style={{ width: '100%' }}\n          mode=\"inline\"\n          defaultOpenKeys={['sub1']}\n        >\n          <SubMenu title=\"流数据部分\" key='sub1'>\n            <Menu.Item key=\"1\">\n              <div onClick={() => { goAnchor('#link1') }}>实时模型精度</div>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n              <div onClick={() => { goAnchor('#link2') }}>静态数据分析</div>\n            </Menu.Item>\n          </SubMenu>\n        </Menu>\n      </Sider>\n      <Content>\n        <h3 id=\"link1\">实时模型精度</h3>\n        <div className=\"paragraph\">我们每隔一秒钟获取一次最新的模型精度，并展示如下：</div>\n        <div id=\"precision-container\"></div>\n        <h3 id=\"link2\">静态数据分析</h3>\n        <div className=\"paragraph\">我们统计出了所有商品的订单数量与浏览数量，做差，得到召回率，从高低排序做图如下：</div>\n        <div id=\"recall-rate-container\" className='graph-container'></div>\n        <div className=\"paragraph\">我们注意到很多商品召回率大于1，即该段时间内商品的购买量大于浏览量，\n        原因可能是商品原先就被存放在购物车中，在促销活动开始时，即可跳过浏览步骤，直接购买。</div>\n        <div className=\"paragraph\">我们分析了流数据表中所有 getDetail 请求的时间，做出每小时 getDetail 请求的数量如下图</div>\n        <div id=\"browser-time-container\" className='graph-container' />\n        <div className=\"paragraph\">可以看到，日间的活跃用户数一直维持在较高水平，用户请求数据的高峰在下午四点和晚上九点左右，到了深夜，活跃用户数逐渐降低，在凌晨4点达到低谷。</div>\n        <div className=\"paragraph\">然后，我们分析了流数据表中所有 buy 请求的时间，可以发现购买行为随时间段的变化与浏览行为基本一致。</div>\n        <div id=\"buy-time-container\" className='graph-container' />\n        <div className=\"paragraph\">随后，我们根据购买量与浏览量，计算出各个时间段用户的购买欲望如图</div>\n        <div id=\"premise-container\" className='graph-container'/>\n        <div className=\"paragraph\">可以看出日间的购买欲望比较稳定，而深夜会有一个较高的增长，在凌晨四点达到峰值，这个点还要买东西的，一定都是有什么急事吧。</div>\n      </Content>\n    </Layout>\n  )\n}\n\nexport default DataFlow","import { Column } from '@antv/g2plot'\n\nconst THEME_COLOR = '#61DDAA'\n\nconst renderHourGraph = function () {\n  fetch('http://119.3.153.72/buy_time.json')\n    .then(res => res.json())\n    .then(data => {\n      const bar = new Column('buy-time-container', {\n        data,\n        xField: 'time',\n        yField: 'value',\n        label: {\n          position: 'top',\n          style: {\n            fill: '#000',\n            opacity: 0.6,\n          },\n          layout: [\n            // 柱形图数据标签位置自动调整\n            { type: 'interval-adjust-position' },\n            // 数据标签防遮挡\n            { type: 'interval-hide-overlap' },\n          ],\n        },\n        maxColumnWidth: 8,\n        columnStyle: {\n          fill: THEME_COLOR,\n        },\n        xAxis: {\n          label: {\n            autoHide: true,\n            autoRotate: false,\n          },\n          title: {\n            text: '时间'\n          }\n        },\n        yAxis: {\n          title: {\n            text: '订单量'\n          }\n        },\n        meta: {\n          time: {\n            alias: '时间',\n          },\n          value: {\n            alias: '订单量',\n          },\n        },\n      })\n      bar.render()\n    })\n}\n\nconst renderBuyCountGraph = function () {\n  fetch('http://119.3.153.72/user_buy_amount.json')\n    .then(res => res.json())\n    .then(data => {\n      const bar = new Column('buy-amount-container', {\n        data,\n        xField: 'u_id',\n        yField: 'b_a',\n        label: {\n          position: 'top',\n          style: {\n            fill: '#000',\n            opacity: 0.6,\n          },\n          layout: [\n            // 柱形图数据标签位置自动调整\n            { type: 'interval-adjust-position' },\n            // 数据标签防遮挡\n            { type: 'interval-hide-overlap' },\n          ],\n        },\n        maxColumnWidth: 8,\n        columnStyle: {\n          fill: THEME_COLOR,\n        },\n        xAxis: {\n          label: {\n            autoHide: true,\n            autoRotate: false,\n          },\n          title: {\n            text: 'user_id'\n          }\n        },\n        yAxis: {\n          title: {\n            text: '订单量'\n          }\n        },\n        meta: {\n          time: {\n            alias: 'user_id',\n          },\n          value: {\n            alias: '订单量',\n          },\n        },\n        slider: {\n          start: 0.0,\n          end: 0.10,\n        },\n      })\n      bar.render()\n    })\n}\nconst renderSalesGraoh = function () {\n  fetch('http://119.3.153.72/sales.json')\n    .then(res => res.json())\n    .then(data => {\n      const bar = new Column('container', {\n        data,\n        isGroup: true,\n        xField: 'category_id',\n        yField: 'value',\n        seriesField: 'item_id',\n        minColumnWidth: 1,\n        columnStyle: {\n          fill: THEME_COLOR\n        },\n        legend: false,\n        label: {\n          position: 'top', // label 数据标签位置 top', 'middle', 'bottom'\n          layout: [\n            // 柱形图数据标签位置自动调整\n            { type: 'interval-adjust-position' },\n            // 数据标签防遮挡\n            { type: 'interval-hide-overlap' },\n            // 数据标签文颜色自动调整\n            { type: 'adjust-color' },\n          ],\n        },\n        xAxis: {\n          label: {\n            autoRotate: false,\n          },\n          title: {\n            text: 'category_id',\n          },\n        },\n        yAxis: {\n          title: {\n            text: '销量'\n          },\n        },\n        slider: {\n          start: 0,\n          end: 0.04,\n          formatter: () => '',\n        },\n      })\n      bar.render()\n    })\n}\n\nexport default function renderGraph () {\n  renderHourGraph()\n  renderSalesGraoh()\n  renderBuyCountGraph()\n}","import { useEffect } from 'react'\nimport { Layout, Menu } from \"antd\"\nimport renderGraph from './renderGraph'\nimport '../layout.css'\nimport SubMenu from 'antd/lib/menu/SubMenu'\nimport goAnchor from '../goAnchor'\n\nconst { Sider, Content } = Layout\n\nfunction DataTable () {\n  useEffect(() => {\n    renderGraph()\n  }, [])\n  return (\n    <Layout>\n      <Sider theme=\"light\" width=\"250px\">\n        <Menu mode=\"inline\" defaultOpenKeys={['1']}>\n          <SubMenu key=\"1\" title=\"数据表部分\">\n            <Menu.Item>\n              <div onClick={() => { goAnchor('#link1') }}>销量分析</div>\n            </Menu.Item>\n            <Menu.Item>\n              <div onClick={() => { goAnchor('#link2') }}>用户订单量分析</div>\n            </Menu.Item>\n            <Menu.Item>\n              <div onClick={() => { goAnchor('#link3') }}>时段订单量分析</div>\n            </Menu.Item>\n          </SubMenu>\n        </Menu>\n      </Sider>\n      <Content>\n        <h3 id=\"link1\">销量分析</h3>\n        <div className=\"paragraph\">我们统计了不同的商品种类的category_id中，不同的item_id的统计数量值，将其按降序排列并取前五名，生成图像如下：</div>\n        <div className=\"paragraph\">从数据图像不难看出，category_id 值为140410的销量前五名的商品单销量超过70000，远超其他商品种类商品单销量，甚至高出两个数量级。\n        一开始所做的猜想是可能是日用品销量好，但考虑到本次数据的特殊性，会把这类商品销量高的原因归结于有抢单机器人的可能。\n        而category_id为140410的这几个商品经推测会有比较高的经济利用价值或者属于高性价比商品，可以加入用户浏览商品的推荐中。</div>\n        <div id=\"container\" className='graph-container'></div>\n        <h3 id=\"link2\">用户订单量分析</h3>\n        <div className=\"paragraph\">我们统计了不同的user_id的统计数量值，将其按降序排列，得到了购买量最多的用户列表</div>\n        <div className=\"paragraph\">用户订单量中提供的信息并不算多，排名前几的用户订单量为262、177、159、118等，相对高于平均排名10-1000名购买量的用户，\n        一方面可以结合其他特征理解为是刷单机器人，另一方面可以简单理解为有冲动型消费的用户或者经济能力较强的用户，为了提高甲方的经济利益可以给这部分用户推送经济效益更高的商品。</div>\n        <div id=\"buy-amount-container\" className='graph-container'></div>\n        <h3 id=\"link3\">时段订单量分析</h3>\n        <div className=\"paragraph\">我们分析了数据库表中所有购买记录的时间，做出各个小时的购买量如图</div>\n        <div className=\"paragraph\">将购买量按小时分类之后得到的结论可能相对更加明显，0点的总销量处于中等偏下的水平，从0点到4点总销量呈下降趋势但下降总量逐渐放缓，\n        到9点逐渐上涨到0点类似水平，显然由于人们在这个时间段多数处于休息的状态；从9点到16点购买量上下起伏波动不大，18点达到一个极小值点，一方面理解为人们在此时吃饭，\n        另一方面也可以猜想人们处于下班回家的时段，购买欲望不强；而从19点到22点再次上涨，在20点达到顶峰，可以理解为人们到家处理完家务之后重新恢复了闲余时间和购买欲望。\n        因此可见一天当中10点到22点的人们购买欲望最强烈，因此可以推送整点秒杀活动或限时免减活动等。</div>\n        <div id=\"buy-time-container\" className='graph-container' />\n      </Content>\n    </Layout>\n  )\n}\n\nexport default DataTable","import { Menu, Layout } from 'antd'\nimport { useState } from 'react'\nimport { Route, Link, Switch } from 'react-router-dom'\nimport './App.less'\nimport DataFlow from './components/DataFlow'\nimport DataTable from './components/DataTable'\n\nconst { Header } = Layout\n\nfunction App () {\n  const [current, setCurrent] = useState('1')\n  const hanldeMenuClick = e => {\n    setCurrent(e.key)\n  }\n  return (\n    <div className=\"App\">\n      <Layout style={{ backgroundColor: '#000' }}>\n        <Header>\n          <div className=\"title\" style={{display: 'flex', alignItems: 'center'}}>\n            <svg t=\"1623244642586\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\"\n              xmlns=\"http://www.w3.org/2000/svg\" p-id=\"1086\" width=\"32\" height=\"32\" style={{marginRight: '20px'}}>\n              <path fill='#61DDAA' d=\"M364.928 107.52c-27.04-1.824-53.632 3.04-76.928 16.48-31.072 17.92-51.776 48.544-62.88 83.84-11.104 35.2-13.664 75.84-9.6 120.224 0.384 4.48 1.184 9.184 1.728 13.76-4.224 1.792-8.704 3.456-12.8 5.376-40.448 18.656-74.336 41.184-99.328 68.416C80.16 442.88 64 476.096 64 512c0 35.872 16.16 69.12 41.12 96.384 24.96 27.232 58.88 49.76 99.328 68.416 4.096 1.92 8.576 3.584 12.8 5.376-0.544 4.576-1.344 9.28-1.76 13.76-4.032 44.384-1.472 84.992 9.632 120.256 11.104 35.264 31.808 65.856 62.88 83.808 31.072 17.92 67.904 20.576 104 12.576 36.096-8 72.544-26.144 108.928-51.84 3.68-2.56 7.36-5.6 11.072-8.352 3.68 2.752 7.36 5.76 11.072 8.352 36.384 25.696 72.832 43.84 108.928 51.84 36.096 8 72.928 5.376 104-12.576 31.072-17.92 51.776-48.544 62.88-83.84 11.104-35.2 13.664-75.84 9.6-120.224-0.384-4.48-1.184-9.184-1.728-13.76 4.224-1.792 8.704-3.456 12.8-5.376 40.448-18.656 74.336-41.184 99.328-68.416C943.84 581.12 960 547.904 960 512c0-35.872-16.16-69.12-41.12-96.384-24.96-27.232-58.88-49.76-99.328-68.416-4.096-1.92-8.576-3.584-12.8-5.376 0.544-4.576 1.344-9.28 1.76-13.76 4.032-44.384 1.472-84.992-9.632-120.256-11.104-35.264-31.808-65.856-62.88-83.808-31.072-17.92-67.904-20.576-104-12.576-36.096 8-72.544 26.144-108.928 51.84-3.68 2.56-7.36 5.6-11.072 8.352-3.68-2.752-7.36-5.76-11.072-8.352-36.384-25.696-72.832-43.84-108.928-51.84a179.968 179.968 0 0 0-27.072-3.936z m-4.16 63.744c5.44 0.384 11.232 1.28 17.408 2.688 24.192 5.344 53.152 18.912 83.712 40.16a738.048 738.048 0 0 0-74.4 82.336 738.336 738.336 0 0 0-108.352 23.168c-3.136-37.056-0.448-68.928 6.976-92.544 7.648-24.192 19.04-39.04 33.888-47.648 11.136-6.4 24.384-9.408 40.736-8.16z m302.496 0c16.32-1.248 29.6 1.76 40.736 8.16 14.848 8.576 26.24 23.456 33.888 47.648 7.424 23.616 10.112 55.488 6.976 92.544a738.336 738.336 0 0 0-108.352-23.168 738.048 738.048 0 0 0-74.4-82.336c30.56-21.248 59.52-34.816 83.712-40.16 6.176-1.376 11.968-2.304 17.44-2.688zM512 254.688c11.232 10.4 22.464 21.952 33.696 34.048A947.776 947.776 0 0 0 512 288c-11.36 0-22.528 0.352-33.696 0.736 11.2-12.096 22.464-23.648 33.696-34.048zM512 352c30.88 0 60.8 1.824 89.568 4.864A846.688 846.688 0 0 1 650.56 432c15.424 26.72 28.8 53.536 40.576 80a846.624 846.624 0 0 1-40.576 80 846.688 846.688 0 0 1-48.992 75.136c-28.8 3.04-58.688 4.864-89.568 4.864-30.88 0-60.8-1.824-89.568-4.864A846.688 846.688 0 0 1 373.44 592c-15.424-26.72-28.8-53.536-40.576-80 11.744-26.464 25.152-53.28 40.576-80s31.968-51.744 48.992-75.136A846.72 846.72 0 0 1 512 352z m-176.512 19.2c-5.92 9.44-11.808 18.944-17.472 28.8a948.16 948.16 0 0 0-16.192 29.568 627.552 627.552 0 0 1-12.64-46.208c14.624-4.512 30.24-8.512 46.304-12.16z m353.024 0c16.064 3.648 31.68 7.648 46.304 12.16-3.392 14.944-7.776 30.464-12.64 46.208a948.128 948.128 0 0 0-16.192-29.568 948.736 948.736 0 0 0-17.472-28.8zM228.928 406.496c8.192 34.08 19.488 69.44 34.144 105.504a737.824 737.824 0 0 0-34.144 105.504c-33.632-15.84-59.904-34.144-76.608-52.384C135.2 546.432 128 529.152 128 512c0-17.152 7.2-34.432 24.32-53.12 16.704-18.24 42.976-36.544 76.608-52.384z m566.144 0c33.632 15.84 59.904 34.144 76.608 52.384 17.12 18.688 24.32 35.968 24.32 53.12 0 17.152-7.2 34.432-24.32 53.12-16.704 18.24-42.976 36.544-76.608 52.384A737.824 737.824 0 0 0 760.928 512c14.656-36.064 25.952-71.424 34.144-105.504zM512 416c-52.64 0-96 43.36-96 96s43.36 96 96 96 96-43.36 96-96-43.36-96-96-96z m0 64c18.048 0 32 13.952 32 32 0 18.048-13.952 32-32 32-18.048 0-32-13.952-32-32 0-18.048 13.952-32 32-32z m-210.176 114.432c5.216 9.856 10.496 19.712 16.16 29.568 5.696 9.856 11.584 19.36 17.504 28.8-16.064-3.648-31.68-7.648-46.304-12.16 3.392-14.944 7.776-30.464 12.64-46.208z m420.352 0c4.864 15.744 9.28 31.264 12.64 46.208-14.624 4.512-30.24 8.512-46.304 12.16 5.92-9.44 11.808-18.944 17.504-28.8 5.664-9.856 10.944-19.712 16.16-29.568zM279.136 704.384c33.6 9.92 69.856 17.856 108.352 23.168 23.904 30.72 48.96 58.176 74.4 82.336-30.56 21.248-59.52 34.816-83.712 40.16-24.736 5.504-43.328 3.072-58.176-5.472-14.848-8.576-26.24-23.456-33.888-47.648-7.424-23.616-10.112-55.488-6.976-92.544z m465.728 0c3.136 37.056 0.448 68.928-6.976 92.544-7.648 24.192-19.04 39.04-33.888 47.648-14.848 8.544-33.44 10.976-58.176 5.472-24.192-5.344-53.152-18.912-83.712-40.16a738.048 738.048 0 0 0 74.4-82.336 738.336 738.336 0 0 0 108.352-23.168z m-266.56 30.88c11.168 0.384 22.336 0.736 33.696 0.736s22.528-0.352 33.696-0.736c-11.2 12.096-22.464 23.648-33.696 34.048a626.72 626.72 0 0 1-33.696-34.048z\" p-id=\"1087\"></path>\n            </svg>\n            第20组成果展示\n          </div>\n          <Menu className=\"menu\" onClick={hanldeMenuClick} mode=\"horizontal\" selectedKeys={[current]}>\n            <Menu.Item key=\"1\"><Link to=\"/table\">数据表部分</Link></Menu.Item>\n            <Menu.Item key=\"2\"><Link to=\"/flow\">流数据部分</Link></Menu.Item>\n          </Menu>\n        </Header>\n        <Switch>\n          <Route path=\"/table\" component={DataTable}></Route>\n          <Route path=\"/flow\" component={DataFlow}></Route>\n          <Route path=\"/\" component={DataTable}></Route>\n        </Switch>\n      </Layout>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}