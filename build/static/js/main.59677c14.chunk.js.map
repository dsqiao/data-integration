{"version":3,"sources":["components/DataFlow/renderGraph.js","components/goAnchor.js","components/DataFlow/index.jsx","components/DataTable/renderGraph.js","components/DataTable/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["THEME_COLOR","renderGraph","fetch","then","res","json","data","Column","xField","yField","xAxis","label","autoRotate","columnStyle","fill","slider","start","end","render","position","style","opacity","layout","type","maxColumnWidth","autoHide","title","text","yAxis","meta","time","alias","value","ratio","goAnchor","selector","top","scrollTop","document","documentElement","window","pageYOffset","body","querySelector","offsetTop","scrollBy","behavior","Sider","Layout","Content","DataFlow","useEffect","liquidPlot","Liquid","percent","outline","border","distance","wave","length","color","setInterval","mode","console","log","changeData","theme","width","defaultOpenKeys","Item","onClick","id","marginLeft","marginTop","isGroup","seriesField","minColumnWidth","legend","formatter","DataTable","Header","App","useState","current","setCurrent","className","backgroundColor","e","key","selectedKeys","to","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.59677c14.chunk.js","sourcesContent":["import { Column } from '@antv/g2plot'\n\nconst THEME_COLOR = '#61DDAA'\n\nconst renderRecallRateGraph = function () {\n  fetch('data/recall_rate.json')\n    .then(res => res.json())\n    .then(data => {\n      const bar = new Column('recall-rate-container', {\n        data,\n        xField: 'item_id',\n        yField: 'recall_rate',\n        xAxis: {\n          label: {\n            autoRotate: false,\n          },\n        },\n        columnStyle: {\n          fill: THEME_COLOR,\n        },\n        slider: {\n          start: 0.0,\n          end: 0.15,\n        },\n      })\n      bar.render()\n    })\n}\n\nconst renderHourGraph = function () {\n  // fetch('https://dsqiao.github.io/data-integration/data/brower_time.json')\n  fetch('/data/brower_time.json')\n    .then(res => res.json())\n    .then(data => {\n      const bar = new Column('browser-time-container', {\n        data,\n        xField: 'time',\n        yField: 'value',\n        label: {\n          position: 'top',\n          style: {\n            fill: '#000',\n            opacity: 0.6,\n          },\n          layout: [\n            { type: 'interval-adjust-position' },\n            { type: 'interval-hide-overlap' },\n          ],\n        },\n        maxColumnWidth: 8,\n        columnStyle: {\n          fill: THEME_COLOR,\n        },\n        xAxis: {\n          label: {\n            autoHide: true,\n            autoRotate: false,\n          },\n          title: {\n            text: '时间'\n          }\n        },\n        yAxis: {\n          title: {\n            text: '浏览量'\n          }\n        },\n        meta: {\n          time: {\n            alias: '时间',\n          },\n          value: {\n            alias: '浏览量',\n          },\n        },\n      })\n      bar.render()\n    })\n}\n\nconst renderBuyHourGraph = function () {\n  // fetch('https://dsqiao.github.io/data-integration/data/buy_time_stream.json')\n  fetch('/data/buy_time_stream.json')\n    .then(res => res.json())\n    .then(data => {\n      const bar = new Column('buy-time-container', {\n        data,\n        xField: 'time',\n        yField: 'value',\n        label: {\n          position: 'top',\n          style: {\n            fill: '#000',\n            opacity: 0.6,\n          },\n          layout: [\n            { type: 'interval-adjust-position' },\n            { type: 'interval-hide-overlap' },\n          ],\n        },\n        maxColumnWidth: 8,\n        columnStyle: {\n          fill: THEME_COLOR,\n        },\n        xAxis: {\n          label: {\n            autoHide: true,\n            autoRotate: false,\n          },\n          title: {\n            text: '时间'\n          }\n        },\n        yAxis: {\n          title: {\n            text: '购买量'\n          }\n        },\n        meta: {\n          time: {\n            alias: '时间',\n          },\n          value: {\n            alias: '购买量',\n          },\n        },\n      })\n      bar.render()\n    })\n}\n\nconst renderPremiseGraph = function () {\n  // fetch('https://dsqiao.github.io/data-integration/data/premise.json')\n  fetch('/data/premise.json')\n    .then(res => res.json())\n    .then(data => {\n      const bar = new Column('premise-container', {\n        data,\n        xField: 'time',\n        yField: 'ratio',\n        maxColumnWidth: 8,\n        columnStyle: {\n          fill: THEME_COLOR,\n        },\n        xAxis: {\n          label: {\n            autoHide: true,\n            autoRotate: false,\n          },\n          title: {\n            text: '时间'\n          }\n        },\n        yAxis: {\n          title: {\n            text: '购买欲望'\n          }\n        },\n        meta: {\n          time: {\n            alias: '时间',\n          },\n          ratio: {\n            alias: '购买欲望',\n          },\n        },\n      })\n      bar.render()\n    })\n}\n\nexport default function renderGraph () {\n  renderRecallRateGraph()\n  renderHourGraph()\n  renderBuyHourGraph()\n  renderPremiseGraph()\n}","function goAnchor (selector) {\n  // 移动距离\n  let top = 0\n  // 当前滚动条位置\n  const scrollTop = document.documentElement.scrollTop || window.pageYOffset || document.body.scrollTop\n  // 若为指定距离\n  if (typeof selector === 'number') {\n    top = selector - scrollTop\n  } else {\n    const anchor = document.querySelector(selector) || { offsetTop: 0 }\n    top = anchor.offsetTop - scrollTop - 94\n  }\n  window.scrollBy({ top, behavior: 'smooth' })\n}\n\nexport default goAnchor\n","import { useEffect } from 'react'\nimport { Layout, Menu } from \"antd\"\nimport renderGraph from './renderGraph'\nimport { Liquid } from '@antv/g2plot'\nimport '../layout.css'\nimport SubMenu from 'antd/lib/menu/SubMenu'\nimport goAnchor from '../goAnchor'\nconst { Sider, Content } = Layout\nconst THEME_COLOR = '#61DDAA'\n\n\nfunction DataFlow () {\n  useEffect(() => {\n    renderGraph()\n  }, [])\n\n  useEffect(() => {\n    const liquidPlot = new Liquid('precision-container', {\n      percent: 0.0,\n      outline: {\n        border: 4,\n        distance: 8,\n      },\n      wave: {\n        length: 128,\n      },\n      color: THEME_COLOR,\n    })\n    liquidPlot.render()\n    setInterval(() => {\n      fetch('http://119.3.153.72/output.txt', {\n        mode: 'cors',\n      })\n        .then(res => res.json())\n        .then(data => {\n          console.log(data)\n          liquidPlot.changeData(data)\n        })\n    }, 1000)\n  }, [])\n  \n  return (\n    <Layout>\n      <Sider theme=\"light\" width=\"250px\">\n        <Menu\n          style={{ width: '100%' }}\n          mode=\"inline\"\n          defaultOpenKeys={['sub1']}\n        >\n          <SubMenu title=\"流数据部分\" key='sub1'>\n            <Menu.Item key=\"1\">\n              <div onClick={() => { goAnchor('#link1') }}>实时模型精度</div>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n              <div onClick={() => { goAnchor('#link2') }}>静态数据分析</div>\n            </Menu.Item>\n          </SubMenu>\n        </Menu>\n      </Sider>\n      <Content>\n        <h3 id=\"link1\">实时模型精度</h3>\n        <div id=\"precision-container\"></div>\n        <h3 id=\"link2\">静态数据分析</h3>\n        <div id=\"recall-rate-container\" style={{ width: '80%', marginLeft: '10%', marginTop: '160px' }} ></div>\n        <div id=\"browser-time-container\" style={{ width: '80%', marginLeft: '10%', marginTop: '160px' }} />\n        <div style={{ marginTop: '30px' }}>我们分析了流数据表中所有 getDetail 请求的时间，做出每小时 getDetail 请求的数量如上图</div>\n        <div id=\"buy-time-container\" style={{ width: '80%', marginLeft: '10%', marginTop: '160px' }} />\n        <div style={{ marginTop: '30px' }}>然后，我们分析了流数据表中所有 buy 请求的时间</div>\n        <div id=\"premise-container\" style={{ width: '80%', marginLeft: '10%', marginTop: '160px' }} />\n        <div style={{ marginTop: '30px' }}>随后，我们根据购买量与浏览量，计算出各个时间段用户的购买欲望如图</div>\n      </Content>\n    </Layout>\n  )\n}\n\nexport default DataFlow","import { Column } from '@antv/g2plot'\n\nconst THEME_COLOR = '#61DDAA'\n\nconst renderHourGraph = function () {\n  fetch('https://dsqiao.github.io/data-integration/data/buy_time.json')\n    .then(res => res.json())\n    .then(data => {\n      const bar = new Column('buy-time-container', {\n        data,\n        xField: 'time',\n        yField: 'value',\n        label: {\n          position: 'top',\n          style: {\n            fill: '#000',\n            opacity: 0.6,\n          },\n          layout: [\n            // 柱形图数据标签位置自动调整\n            { type: 'interval-adjust-position' },\n            // 数据标签防遮挡\n            { type: 'interval-hide-overlap' },\n          ],\n        },\n        maxColumnWidth: 8,\n        columnStyle: {\n          fill: THEME_COLOR,\n        },\n        xAxis: {\n          label: {\n            autoHide: true,\n            autoRotate: false,\n          },\n          title: {\n            text: '时间'\n          }\n        },\n        yAxis: {\n          title: {\n            text: '订单量'\n          }\n        },\n        meta: {\n          time: {\n            alias: '时间',\n          },\n          value: {\n            alias: '订单量',\n          },\n        },\n      })\n      bar.render()\n    })\n}\n\nconst renderSalesGraoh = function () {\n  fetch('https://dsqiao.github.io/data-integration/data/sales.json')\n    .then(res => res.json())\n    .then(data => {\n      const bar = new Column('container', {\n        data,\n        isGroup: true,\n        xField: 'category_id',\n        yField: 'value',\n        seriesField: 'item_id',\n        minColumnWidth: 1,\n        columnStyle: {\n          fill: THEME_COLOR\n        },\n        legend: false,\n        label: {\n          position: 'top', // label 数据标签位置 top', 'middle', 'bottom'\n          layout: [\n            // 柱形图数据标签位置自动调整\n            { type: 'interval-adjust-position' },\n            // 数据标签防遮挡\n            { type: 'interval-hide-overlap' },\n            // 数据标签文颜色自动调整\n            { type: 'adjust-color' },\n          ],\n        },\n        xAxis: {\n          label: {\n            autoRotate: false,\n          },\n          title: {\n            text: 'category_id',\n          },\n        },\n        yAxis: {\n          title: {\n            text: '销量'\n          },\n        },\n        slider: {\n          start: 0,\n          end: 0.04,\n          formatter: () => '',\n        },\n      })\n      bar.render()\n    })\n}\n\nexport default function renderGraph () {\n  renderHourGraph()\n  renderSalesGraoh()\n}","import { useEffect } from 'react'\nimport { Layout, Menu } from \"antd\"\nimport renderGraph from './renderGraph'\nimport '../layout.css'\nimport SubMenu from 'antd/lib/menu/SubMenu'\nimport goAnchor from '../goAnchor'\n\nconst { Sider, Content } = Layout\n\nfunction DataTable () {\n  useEffect(() => {\n    renderGraph()\n  }, [])\n  return (\n    <Layout>\n      <Sider theme=\"light\" width=\"250px\">\n        <Menu mode=\"inline\" defaultOpenKeys={['1']}>\n          <SubMenu key=\"1\" title=\"数据表部分\">\n            <Menu.Item>\n              <div onClick={() => { goAnchor('#link1') }}>销量分析</div>\n            </Menu.Item>\n            <Menu.Item>\n              <div onClick={() => { goAnchor('#link2') }}>订单量分析</div>\n            </Menu.Item>\n          </SubMenu>\n        </Menu>\n      </Sider>\n      <Content>\n        <h3 id=\"link1\">销量分析</h3>\n        <div id=\"container\" style={{ width: '70%', marginLeft: '15%', marginTop: '160px' }}></div>\n        <div id=\"buy-amount-container\"></div>\n        <h3 id=\"link2\">订单量分析</h3>\n        <div id=\"buy-time-container\" style={{ width: '70%', marginLeft: '16%', marginTop: '160px' }} />\n        <div>我们分析了数据库表中所有购买记录的时间，做出各个小时的购买量如图</div>\n      </Content>\n    </Layout>\n  )\n}\n\nexport default DataTable","import { Menu, Layout } from 'antd'\nimport { useState } from 'react'\nimport { Route, Link, Switch } from 'react-router-dom'\nimport './App.less'\nimport DataFlow from './components/DataFlow'\nimport DataTable from './components/DataTable'\n\nconst { Header } = Layout\n\nfunction App () {\n  const [current, setCurrent] = useState('1')\n  const hanldeMenuClick = e => {\n    setCurrent(e.key)\n  }\n  return (\n    <div className=\"App\">\n      <Layout style={{ backgroundColor: '#000' }}>\n        <Header>\n          <div className=\"title\">第20组成果展示</div>\n          <Menu className=\"menu\" onClick={hanldeMenuClick} mode=\"horizontal\" selectedKeys={[current]}>\n            <Menu.Item key=\"1\"><Link to=\"/table\">数据表部分</Link></Menu.Item>\n            <Menu.Item key=\"2\"><Link to=\"/flow\">流数据部分</Link></Menu.Item>\n          </Menu>\n        </Header>\n        <Switch>\n          <Route path=\"/table\" component={DataTable}></Route>\n          <Route path=\"/flow\" component={DataFlow}></Route>\n          <Route path=\"/\" component={DataTable}></Route>\n        </Switch>\n      </Layout>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}